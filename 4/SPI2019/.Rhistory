acceso.api <- 'http://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&clien
t_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8}&grant_type=client_credentials'
conex <- GET(acceso.api)
r <- GET("https://httpbin.org/get")
r
library(httr)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&clien
t_secret={ 5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&clien
t_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
acceso.api <- 'https://pubsbapi.samrtbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&client_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&client_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
token
View(token)
token$request$auth_token
library(httr)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&client_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
token
library(httr)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&client_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
token
library(httr)
acceso.api <- 'https://pubsbapi.smartbike.com/oauth/v2/token?client_id={1569_3q712quy66uc0g4cw8k48s4wks00wsk8sgog4ss40kk4sc8kc8}&client_secret={5m12s2mn98w80w8ogsw4gc48gskggk8cwoo8s8c0s4s0sw8g0g}&grant_type=client_credentials'
token <- GET(acceso.api)
token
library(readr)
?read_csv
shiny::runApp('Desktop/CD2EDUARDOFOO/Ecobici/Shiny')
library(shiny); runApp('Desktop/draft.R')
library(shiny)
library(xts)
library(leaflet)
library(dplyr)
runApp('Desktop/draft.R')
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(1)+10, Long = rnorm(1),Id=a)
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[1,1]),"Long"=as.numeric(df[2,1]),"Date"=rownames(data_a))
data_a1
leaflet() %>%
addMarkers(data = points(),popup=as.character(points()$a))
leaflet() %>%
addMarkers(data = points())
data_a1
library(dplyr)
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(1, 2, 6)+10, Long = rnorm(1, 3, 9),Id=a)
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[1,1]),"Long"=as.numeric(df[2,1]),"Date"=rownames(data_a))
data_a1
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(1, 2, 6)+10, Long = rnorm(1, 3, 9),Id=a)
df
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
a
library(xts)
library(leaflet)
library(dplyr)
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(10, 2, 6)+10, Long = rnorm(10, 3, 9),Id=a)
df
library(shiny)
library(xts)
library(leaflet)
library(dplyr)
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
df
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[1,1]),"Long"=as.numeric(df[2,1]),"Date"=rownames(data_a))
data_a1
library(shiny)
library(xts)
library(leaflet)
library(dplyr)
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a<-xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
data_a<-data.frame(a)
data_a
data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
ui <- fluidPage(
sliderInput("time", "date",min(date),
max(date),
value = max(date),
step=1,
animate=T),
leafletOutput("mymap")
)
server <- function(input, output, session) {
points <- reactive({
data_a1 %>%
filter(Date==input$time)
})
output$mymap <- renderLeaflet({
leaflet() %>%
addMarkers(data = points(),popup=as.character(points()$a))
})
}
runApp('Desktop/draft.R')
library(shiny)
library(xts)
library(leaflet)
library(dplyr)
date<-seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
date
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-20"), by="day")
date
a<-xts(1:20,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
df
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
data_a1
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
data <- c(date, date)
a<-xts(1:20,order.by=date)
date
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
date <- c(date, date)
a<-xts(1:20,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
df
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
data_a1
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
date
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a <- xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
df
data_a<-data.frame(a)
data_a1<-data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
data_a1
#############
date <- seq(as.Date("2015-01-01"), as.Date("2015-01-10"), by="day")
a <- xts(1:10,order.by=date)
df = data.frame(Lat = rnorm(10)+10, Long = rnorm(10),Id=a)
data_a<-data.frame(a)
data_a2<-data_a %>%
mutate("Lat" =as.numeric(df[,1]),"Long"=as.numeric(df[,1]),"Date"=rownames(data_a))
data_a1 <- rbind(data_a1, data_a2)
ui <- fluidPage(
sliderInput("time", "date",min(date),
max(date),
value = max(date),
step=1,
animate=T),
leafletOutput("mymap")
)
runApp('Desktop/draft.R')
leaflet() %>%
addMarkers(data = points(),popup=as.character(points()$a))
leaflet() %>%
addMarkers(data = data_a1)
leaflet(data_a1) %>%
addMarkers()
paste0(RGB.Laplaciano, 1:10)
paste0('RGB.Laplaciano', 1:10)
m <- 10
paste0('RGB.Laplaciano', 1:m)
m <- 10
C(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m))
paste0('RGB.Laplaciano', 1:m)
m <- 10
C(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m))
C(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
paste0('RGB.Laplaciano', 1:m
)
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
m <- 5
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
m <- 3
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
m <- 4
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
m <- 4
c(paste0('RGB.Laplaciano', 1:m),
paste0('RGB.Sobelx', 1:m) ,
paste0('RGB.Sobely', 1:m) ,
paste0('RGB.Canny', 1:m) ,
paste0('R', 1:m) ,
paste0('G', 1:m) ,
paste0('B', 1:m) ,
paste0('R.Espacial', 1:m) ,
paste0('G.Espacial', 1:m) ,
paste0('B.Espacial', 1:m) ,
paste0('HSV.Laplaciano', 1:m),
paste0('HSV.Sobelx', 1:m) ,
paste0('HSV.Sobely', 1:m) ,
paste0('HSV.Canny', 1:m) ,
paste0('H', 1:m) ,
paste0('S', 1:m) ,
paste0('V', 1:m),
paste0('H.Espacial', 1:m) ,
paste0('S.Espacial', 1:m),
paste0('V.Espacial', 1:m),
paste0('Eigen', 1:3) ,
paste0('BGR.Laplaciano', 1:m),
paste0('BGR.Sobelx', 1:m) ,
paste0('BGR.Sobely', 1:m) ,
paste0('BGR.Canny', 1:m) ,
paste0('PC1.', 1:m) ,
paste0('PC2.', 1:m) ,
paste0('PC3.', 1:m) ,
paste0('PC1.Espacial', 1:m) ,
paste0('PC2.Espacial', 1:m) ,
paste0('PC3.Espacial', 1:m) )
Sys.Date()
año <- as.integer(substr(Sys.Date(), 1, 4))
año
x <- 0:2
alarm()
cat(date(), "\n", "FELIZ AÑO NUEVO 2019", "\n")
plot(x, x, type = "n", ann = F, axes = F)
text(1, 1, "FELIZ AÑO NUEVO 2019", cex = 2.5)
repeat{
año <- as.integer(substr(Sys.Date(), 1, 4))
x <- 0:2
if (año == 2019L){
alarm()
cat(date(), "\n", "FELIZ AÑO NUEVO 2019", "\n")
plot(x, x, type = "n", ann = F, axes = F)
text(1, 1, "FELIZ AÑO NUEVO 2019", cex = 2.5)
break
}
else {
plot(x, x, type = "n", ann = F, axes = F)
text(1, 1, date(), cex = 2.5)
Sys.sleep(1)
}
#install.packages('XML')
library(XML)
path <- "C:\\Users\\fou-f\\Desktop\\SPI2019\\Parser\\PosiblementeCorrectos\\"
PosiblementeCorrectos <- dir()
#install.packages('XML')
library(XML)
path <- "C:\\Users\\fou-f\\Desktop\\SPI2019\\Parser\\PosiblementeCorrectos\\"
PosiblementeCorrectos <- dir()
PosiblementeCorrectos
setwd("~/Desktop/SPI2019")
dir()
###############################################
# Datos #######################################
datos <- read.csv("DataFrameTransformadores.csv") # requerimos que el dataframe se llame data
################################################
################## Modelos ###################
arbol <- function(variable.predecir, data)
{
# Closure para crear MUCHOS MODELOS
# nombre.variable (string): Nombre de la variable que se va a sugerir
# data (dataframe): Data frame con el historico
# REGRESA UN MODELO ENTRENADO
library(rpart)
# generamos la formula para el modelo
formula.foo <- as.formula(paste0(variable.predecir, "~ ."))
rpart(formula.foo, data=data[1:15 , -match(variable.predecir, names(data)) ],
control= rpart.control(maxcompete = 4, maxsurrogate = 5,
usesurrogate = 2, xval = 10,
maxdepth = 5) ) # 5 arboles peque FALTA MAXIMO NUMERO DE OPCIONES
}
# CREACION DE N MODELOS ########################
MODELOS <- list()
names(datos)
# CREACION DE N MODELOS ########################
MODELOS <- list()
for (i in names(datos))
{
}
source('~/Desktop/SPI2019/Model.R')
